name: CI/CD with Docker

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      SPRING_PROFILES_ACTIVE: "development"
    services:
      mongodb:
        image: mongo
        ports:
          - 27017:27017
        options: --name my-mongo
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Make Gradlew executable
        run: chmod +x ${{github.workspace}}/postal_items/gradlew
        working-directory: postal_items
      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: build
          build-root-directory: postal_items

          
  docker_push:
    needs: build
    runs-on: ubuntu-latest
    env:
      SPRING_PROFILES_ACTIVE: "development"
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Login to Docker Hub
      run: docker login -u ${{secrets.DOCKER_USERNAME}} -p ${{secrets.DOCKER_PASSWORD}}

    - name: Build and push Docker image
      run: |
        docker build -t tupi4ok/post_image:latest .
        docker push tupi4ok/post_image:latest
      working-directory: postal_items

      
  test_report:
    needs: build
    runs-on: ubuntu-latest
    env:
      SPRING_PROFILES_ACTIVE: "development"
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Make Gradlew executable
        run: chmod +x ${{github.workspace}}/postal_items/gradlew
        working-directory: postal_items
      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: build
          build-root-directory: postal_items
      - name: Publish code coverage
        uses: paambaati/codeclimate-action@v3.0.0
        env:
           CC_TEST_REPORTER_ID: ${{secrets.TESTCOVERAGE}}
           JACOCO_SOURCE_PATH: postal_items/src/main/java
        with:
           coverageCommand: make report
           coverageLocations: ${{github.workspace}}/postal_items/build/reports/jacoco/test/jacocoTestReport.xml:jacoco
